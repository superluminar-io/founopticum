AWSTemplateFormatVersion: 2010-09-09

Parameters:
  OrgId:
    Type: String
    Default: o-k2arggwiaf
  RootId:
    Type: String
    Default: r-2odh

Resources:

  OrganizationConformancePackBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub awsconfigconforms-${AWS::StackName}

  OrganizationConformancePackBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref OrganizationConformancePackBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowGetPutObject
            Effect: Allow
            Principal: "*"
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource: !Sub ${OrganizationConformancePackBucket.Arn}/*
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref OrgId
              ArnLike:
                aws:PrincipalArn: arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms
          - Sid: AllowGetBucketAcl
            Effect: Allow
            Principal: "*"
            Action: s3:GetBucketAcl
            Resource: !Sub ${OrganizationConformancePackBucket.Arn}
            Condition:
              StringEquals:
                aws:PrincipalOrgID: !Ref OrgId
              ArnLike:
                aws:PrincipalArn: arn:aws:iam::*:role/aws-service-role/config-conforms.amazonaws.com/AWSServiceRoleForConfigConforms

  SuperwerkerBackupTagsEnforcementResources:
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: superwerker-backup
      PermissionModel: SERVICE_MANAGED
      OperationPreferences:
        MaxConcurrentPercentage: 50
      Capabilities:
          - CAPABILITY_IAM
      AutoDeployment:
        Enabled: true
        RetainStacksOnAccountRemoval: false
      StackInstancesGroup:
        - Regions:
            - !Ref AWS::Region
          DeploymentTargets:
            OrganizationalUnitIds:
              - !Ref RootId
      TemplateBody: |
        Resources:
          SuperwerkerBackupTagsEnforcementRemediationRole: # TODO: Integrity Protection
            Type: AWS::IAM::Role
            Properties:
              RoleName: SuperwerkerBackupTagsEnforcementRemediationRole
              AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                  - Effect: Allow
                    Principal:
                      Service: ssm.amazonaws.com
                    Action: sts:AssumeRole
              Policies:
                - PolicyName: AllowCallCrossAccountAutomation
                  PolicyDocument:
                    Statement:
                      - Effect: Allow
                        Action: sts:AssumeRole
                        Resource: arn:aws:iam::*:role/AWSControlTowerExecution

  SuperwerkerBackupTagsEnforcement:
    DependsOn: SuperwerkerBackupTagsEnforcementResources
    Type: AWS::Config::OrganizationConformancePack
    Properties:
      ExcludedAccounts:
        - !Ref AWS::AccountId # exclude master account since it has no config recorder set up
        - 340318396484
        - 633760945300
        - 231363458211
        - 980616047419
      DeliveryS3Bucket: !Ref OrganizationConformancePackBucket
      OrganizationConformancePackName: !Ref AWS::StackName
      TemplateBody: !Sub |
        Resources:
          ConfigRule:
            Type: AWS::Config::ConfigRule
            Properties:
              ConfigRuleName: sw-backup # TODO: nicer name
              Scope:
                ComplianceResourceTypes:
                  - AWS::DynamoDB::Table
              InputParameters:
                tag1Key: superwerker:backup
                tag1Value: daily,none
              Source:
                Owner: AWS
                SourceIdentifier: REQUIRED_TAGS

          Remediation:
            Type: AWS::Config::RemediationConfiguration
            Properties:
              ConfigRuleName: sw-backup # FIXME: !REF
              Automatic: true
              MaximumAutomaticAttempts: 10
              RetryAttemptSeconds: 60
              TargetId: arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:document/sw-backup-rem
              TargetType: SSM_DOCUMENT
              Parameters:
                ResourceValue:
                  ResourceValue:
                    Value: "RESOURCE_ID"
                AutomationAssumeRole:
                  StaticValue:
                    Values:
                      - ${SuperwerkerBackupTagsEnforcementRemediationRole.Arn}

  SuperwerkerBackupTagsEnforcementRemediationRole: # TODO: Integrity Protection
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowCallCrossAccountAutomation
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: arn:aws:iam::*:role/AWSControlTowerExecution


  #  EnableEc2EbsEncryptionByDefault:
#    Type: AWS::Config::OrganizationConfigRule
#    Properties:
#      ExcludedAccounts:
#        - !Ref AWS::AccountId # exclude master account since it has no config recorder set up
#      OrganizationConfigRuleName: founopticum-ec2-ebs-encryption-by-default
#      OrganizationManagedRuleMetadata:
#        RuleIdentifier: EC2_EBS_ENCRYPTION_BY_DEFAULT


#  EnableEc2EbsEncryptionByDefaultRemediation:
#    Type: "AWS::Config::RemediationConfiguration"
#    Properties:
#      ConfigRuleName: !Ref EnableEc2EbsEncryptionByDefault
#      TargetId: !Ref EnableEc2EbsEncryptionByDefaultDocument
#      TargetType: "SSM_DOCUMENT"
#      TargetVersion: "1"
#
#  EnableEc2EbsEncryptionByDefaultDocument:
#    Type: AWS::SSM::Document
#    Properties:
#      DocumentType: Automation
#      Content:
#        schemaVersion: '0.3'
#        assumeRole: !GetAtt BasicRemediationConfigurationRole.Arn
#        mainSteps:
#          - name: CheckIfOrganizationAdminAccountIsAlReadyRegistered
#            action: aws:executeAwsApi
#            inputs:
#              Service: guardduty
#              Api: ListOrganizationAdminAccounts
#
